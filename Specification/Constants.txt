Constants in Digital Logic are built around the idea of binary strings. 
These binary strings are represented by a sequence of 0s and 1s. 1 indicates true, 0 indicates false. Eg '10010' or '0'. The constant values are limited to a max length of 32 bits, as are all other values in the language. (This is because all variables are technically 32 bit integer values under the hood). Any bit strings shorter than a length of 32 are right aligned, and any remaining bits are assumed to be 0. Any bit strings longer than 32 have their most significant bits trimmed to a length of 32 and a compiler warning is generated. Constants always return their value when retrieving a value from them, and trying to set to a constant results in a runtime error.
Constants are also used to manually specify function IDs. Some built in operators have flags which can be set, constants are useful for this purpose. Constants are also useful for initialising variables.